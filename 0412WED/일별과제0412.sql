--1번
SELECT D.DNAME, E.ENAME, E.JOB, E.SAL FROM EMP E, DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO
ORDER BY D.DNAME;

SELECT D.DNAME, E.ENAME, E.JOB, E.SAL FROM EMP E, DEPT D
WHERE E.DEPTNO(+)= D.DEPTNO 
AND E.SAL(+) > 2000;
ORDER BY D.DNAME;

SELECT ENAME, DEPTNO, SAL FROM EMP;
SELECT DNAME, DEPTNO FROM DEPT;

--2번
SELECT E.ENAME||'"S MANAGER IS '||NVL(M.ENAME, 'NOBODY')
FROM EMP E, EMP M
WHERE E.MGR = M.EMPNO(+)
ORDER BY M.ENAME;

--EMP E로 가정
SELECT ENAME, MGR, EMPNO, JOB FROM EMP;
--EMP M으로 가정
SELECT ENAME, MGR, EMPNO, JOB FROM EMP;

SELECT E.ENAME||'"S MANAGER IS '||M.ENAME FROM EMP E, EMP M
WHERE E.MGR = M.EMPNO
ORDER BY M.ENAME;

SELECT E.ENAME||'"S MANAGER IS '||M.ENAME FROM EMP E, EMP M
WHERE E.MGR = M.EMPNO(+)
ORDER BY M.ENAME;

--4번문제
SELECT * FROM EMP;
SELECT * FROM DEPT;

SELECT D.DEPTNO AS "부서번호,", E.ENAME AS "이름,", E.JOB AS "직업,", E.SAL AS "급여", 
       (SELECT COUNT(DISTINCT E2.SAL) 
        FROM EMP E2 
        WHERE E2.SAL >= E.SAL AND E2.DEPTNO = E.DEPTNO) AS "급여순위"
FROM EMP E, DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO 
ORDER BY D.DEPTNO ASC, E.SAL DESC;

--5번 문제
SELECT D.DEPTNO AS "부서번호,", E.ENAME AS "이름,", E.JOB AS "직업,", E.SAL AS "급여", 
       DENSE_RANK() OVER (PARTITION BY D.DEPTNO ORDER BY E.SAL DESC) "급여순위"
FROM EMP E, DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO 
ORDER BY D.DEPTNO ASC, E.SAL DESC;

--6번
--SYSTEM 테이블 만들기
CREATE TABLE SYSTEM (
SYSTEM_ID		VARCHAR2(5), 
SYSTEM_NAME   	VARCHAR2(15)
);
--행 삽입
INSERT INTO SYSTEM VALUES('XXX', '혜화DB');
INSERT INTO SYSTEM VALUES ('YYY', '강남DB');
INSERT INTO SYSTEM VALUES ('ZZZ', '영등포DB');
SELECT * FROM SYSTEM;
--RESOURCE_USAGE 테이블 만들기
CREATE TABLE RESOURCE_USAGE(
SYSTEM_ID 		VARCHAR2(5),
RESOURCE_NAME 	VARCHAR2(10)
);
--행 삽입
INSERT INTO RESOURCE_USAGE VALUES ('XXX', 'FTP');
INSERT INTO RESOURCE_USAGE VALUES ('YYY', 'FTP');
INSERT INTO RESOURCE_USAGE VALUES ('YYY', 'TELNET');
INSERT INTO RESOURCE_USAGE VALUES ('YYY', 'EMAIL');
SELECT * FROM RESOURCE_USAGE;
COMMIT;

SELECT 
S.SYSTEM_ID, 
S.SYSTEM_NAME, 
    CASE WHEN R.RESOURCE_NAME = 'FTP' THEN '사용'
        ELSE '미사용'
    END AS FTP,
    CASE WHEN R.RESOURCE_NAME = 'TELNET' THEN '사용'
        ELSE '미사용'
    END AS TELNET,
    CASE WHEN R.RESOURCE_NAME = 'EMAIL' THEN '사용'
        ELSE '미사용'
    END AS EMAIL
FROM SYSTEM S, RESOURCE_USAGE R
WHERE S.SYSTEM_ID = R.SYSTEM_ID(+);

SELECT 
    S.SYSTEM_ID, 
    S.SYSTEM_NAME, 
    MAX(CASE WHEN R.RESOURCE_NAME = 'FTP' THEN '사용' ELSE '미사용' END) AS FTP,
    MAX(CASE WHEN R.RESOURCE_NAME = 'TELNET' THEN '사용' ELSE '미사용' END) AS TELNET,
    MAX(CASE WHEN R.RESOURCE_NAME = 'EMAIL' THEN '사용' ELSE '미사용' END) AS EMAIL
FROM 
    SYSTEM S, 
    RESOURCE_USAGE R
WHERE 
    S.SYSTEM_ID = R.SYSTEM_ID(+)
GROUP BY 
    S.SYSTEM_ID, 
    S.SYSTEM_NAME
ORDER BY SYSTEM_ID ASC;

SELECT DEPTNO, ENAME, SAL, 
(SELECT SAL / SUM(E.SAL) * 100.00||'%' FROM EMP E) AS SAL_RATE
FROM EMP;

--8번 먼저
SELECT DEPTNO FROM DEPT;
SELECT DEPTNO FROM EMP;


SELECT DEPTNO FROM DEPT
UNION
SELECT DEPTNO FROM EMP;

--걍 7번 ㄱㄱ
SELECT E.DEPTNO, E.ENAME, E.SAL, ROUND((E.SAL / D.TOTAL_SAL) * 100, 2)||'%' AS SAL_RATE
FROM EMP E, (SELECT SUM(SAL) AS TOTAL_SAL FROM EMP) D;

SELECT E.DEPTNO, E.ENAME, E.SAL, ROUND((E.SAL / D.TOTAL_SAL) * 100, 2)||'%' AS SAL_GRADE
FROM EMP E, (SELECT SUM(SAL) AS TOTAL_SAL FROM EMP) D;

SELECT DEPTNO FROM DEPT
UNION
SELECT DEPTNO FROM EMP;

SELECT ENAME, JOB, SAL FROM EMP WHERE JOB = 'CLERK'
UNION
SELECT ENAME, JOB, SAL FROM EMP WHERE SAL > 2000
ORDER BY JOB ASC, SAL DESC;


SELECT DEPTNO FROM DEPT
MINUS
SELECT DEPTNO FROM EMP;